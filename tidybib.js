const comments = /(%.*)/gmi;
const string = /(@string{[\s\S]*?})(?=[ \\\n]*[@%])/gmi;
const inproceedings = /(@inproceedings{[\s\S]*?})(?=[ \\\n]*[@%])/gmi;
const proceedings = /(@proceedings{[\s\S]*?})(?=[ \\\n]*[@%])/gmi;
const misc = /(@misc{[\s\S]*?})(?=[ \\\n]*[@%])/gmi;
const article = /(@article{[\s\S]*?})(?=[ \\\n]*[@%])/gmi;
const book = /(@book{[\s\S]*?})(?=[ \\\n]*[@%])/gmi;
const incollection = /(@incollection{[\s\S]*?})(?=[ \\\n]*[@%])/gmi;

const head_inproceedings = /(@inproceedings{[\s\S]*?,)(?=[ \\\n]*)/gmi;
const head_proceedings = /(@proceedings{[\s\S]*?,)(?=[ \\\n]*)/gmi;
const head_misc = /(@misc{[\s\S]*?,)(?=[ \\\n]*)/gmi;
const head_article = /(@article{[\s\S]*?,)(?=[ \\\n]*)/gmi;
const head_book = /(@book{[\s\S]*?,)(?=[ \\\n]*)/gmi;
const head_incollection = /(@incollection{[\s\S]*?,)(?=[ \\\n]*)/gmi;

const author = /(?<!\w)(author[\s\S]*?[}\"],)/gmi;
const title = /(?<!\w)(title[\s\S]*?[}\"],)/gmi;
const journal = /(?<!\w)(journal[\s\S]*?[}\"],)/gmi;
const year = /(?<!\w)(year[\s\S]*?[}\"],)/gmi;
const volume = /(?<!\w)(volume[\s\S]*?[}\"],)/gmi;
const number = /(?<!\w)(number[\s\S]*?[}\"],)/gmi;
const pages = /(?<!\w)(pages[\s\S]*?[}\"],)/gmi;
const month = /(?<!\w)(month[\s\S]*?[}\"],)/gmi;
const doi = /(?<!\w)(doi[\s\S]*?[}\"],)/gmi;
const editor = /(?<!\w)(editor[\s\S]*?[}\"],)/gmi;
const publisher = /(?<!\w)(publisher[\s\S]*?[}\"],)/gmi;
const series = /(?<!\w)(series[\s\S]*?[}\"],)/gmi;
const organization = /(?<!\w)(organization[\s\S]*?[}\"],)/gmi;
const address = /(?<!\w)(address[\s\S]*?[}\"],)/gmi;
const edition = /(?<!\w)(edition[\s\S]*?[}\"],)/gmi;
const booktitle = /(?<!\w)(booktitle[\s\S]*?[}\"],)/gmi;
const howpublished = /(?<!\w)(howpublished[\s\S]*?[}\"],)/gmi;

// TODO
const outer_brace = /(?<=[{\"])([\s\S]*)(?=[}\"])/gmi;
const inner_brace = /(?<=[{\"])[^{]([^{}]+)[^}](?=[}\"])/gmi;

// const outhead = "% This file is generated by Tidybib\n% Contact me at dongdonglin8@gmail.com\n\n";

const inproceedings_regex = {
    "item": inproceedings,
    "head": head_inproceedings,

    "author": author,
    "title": title,
    "booktitle": booktitle,
    "year": year,
    "editor": editor,
    "volume": volume,
    "number": number,
    "series": series,
    "pages": pages,
    "publisher": publisher,
    "doi": doi
}

const proceedings_regex = {
    "item": proceedings,
    "head": head_proceedings,

    "title": title,
    "year": year,
    "editor": editor,
    "publisher": publisher,
    "volume": volume,
    "number": number,
    "series": series,
    "organization": organization,
    "address": address,
    "month": month
}

const misc_regex = {
    "item": misc,
    "head": head_misc,

    "author": author,
    "title": title,
    "howpublished": howpublished,
    "year": year,
    "month": month
}

const book_regex = {
    "item": book,
    "head": head_book,

    "author": author,
    "title": title,
    "year": year,
    "edition": edition,
    "publisher": publisher,
    "address": address
}

const article_regex = {
    "item": article,
    "head": head_article,

    "author": author,
    "title": title,
    "journal": journal,
    "year": year,
    "volume": volume,
    "number": number,
    "pages": pages,
    "doi": doi
}

const incollection_regex = {
    "item": incollection,
    "head": head_incollection,

    "author": author,
    "title": title,
    "booktitle": booktitle,
    "pages": pages,
    "year": year
}

function repeat(str, num) {
  	if (num <= 0){
		return "";
	}else{
		var newstr = "";
		for (var i = 0; i<num; i++){
			newstr += str;
		}
		return newstr;
	}
}

function tidy_item(regex, object_str) {
    matches = object_str.match(regex["item"]);

    if (matches) {
        for (var i=0; i<matches.length; i++) {
            for (var key in regex) {
                if (key == "item") {
                    continue;
                } else if (key == "head") {
                    var field = matches[i].match(regex[key]);
                    var tidy_head = field[0].replace(/\ +/g, "");
                    document.getElementById("new_version").value += tidy_head+"\n";
                } else {
                    var field = matches[i].match(regex[key]);
                    if (field) {
                        var content = field[0].match(outer_brace);
                        if (content) {
                            var content1 = content[0].replace(/\n+/g, "");
                            var tidy_content = content1.replace(/\ +/g, " ");
                            var blank = repeat(" ", 15-key.length-3);
                            // console.log(tidy_content)
                            if (tidy_content[0] == "{" && tidy_content[tidy_content.length-1] == "}") {
                                document.getElementById("new_version").value += "  "+key+" = "+blank+tidy_content+",\n";
                            } else {
                                document.getElementById("new_version").value += "  "+key+" = "+blank+"{"+tidy_content+"},\n";
                            }
                        }
                    } else {
                        var blank = repeat(" ", 15-key.length-3);
                        document.getElementById("new_version").value += "  "+key+" = "+blank+"{},\n";
                    }
                }
            }
            document.getElementById("new_version").value += "}\n\n";
        }
    }
    if (matches) {
        return matches.length;
    } else {
        return 0;
    }
}

function tidybib() {

    var bibin = document.getElementById("old_version").value + "\n%";
    // document.getElementById("new_version").value = outhead;

    var comment_content = bibin.match(comments);
    if (comment_content) {
        for (var i=0; i<comment_content.length; i++) {
            document.getElementById("new_version").value += comment_content[i]+"\n";
        }
        document.getElementById("new_version").value += "\n";
    }

    var abbr = bibin.match(string);
    if (abbr) {
        for (var i=0; i<abbr.length; i++) {
            var tidy_abbr = abbr[i].replace(/\n+/g, "");
            tidy_abbr = tidy_abbr.replace(/\ +/g, " ");
            document.getElementById("new_version").value += tidy_abbr+"\n";
        }
        document.getElementById("new_version").value += "\n";
    }

    var numAricle = tidy_item(article_regex, bibin);
    var numInproc = tidy_item(inproceedings_regex, bibin);
    var numProc = tidy_item(proceedings_regex, bibin);
    var numMisc = tidy_item(misc_regex, bibin);
    var numBook = tidy_item(book_regex, bibin);
    var numIncollect = tidy_item(incollection_regex, bibin);
    var numAll = numAricle+numInproc+numProc+numMisc+numBook+numIncollect;

    document.getElementById("out").innerText = "\n";
    document.getElementById("out").innerText += numAll+" items are processed successfully!\n";
    document.getElementById("out").innerText += numAricle+" article\n";
    document.getElementById("out").innerText += numInproc+" inproceedings\n";
    document.getElementById("out").innerText += numProc+" proceedings\n";
    document.getElementById("out").innerText += numMisc+" misc\n";
    document.getElementById("out").innerText += numBook+" book\n";
    document.getElementById("out").innerText += numIncollect+" incollection\n";
}